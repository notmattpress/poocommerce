/**
 * External dependencies
 */
import { __ } from '@wordpress/i18n';
import { useState } from '@wordpress/element';
import { useSelect } from '@wordpress/data';
import ServerSideRender from '@wordpress/server-side-render';
import { useBlockProps } from '@wordpress/block-editor';
import {
	__experimentalText as Text, // eslint-disable-line
} from '@wordpress/components';
// eslint-disable-next-line @poocommerce/dependency-group
import { store as editorStore } from '@wordpress/editor';

/**
 * Internal dependencies
 */
import metadata from './block.json';

declare global {
	interface Window {
		// eslint-disable-next-line @typescript-eslint/naming-convention
		PooCommerceEmailEditor?: {
			email_types: Array< {
				value: string;
				id: string;
			} >;
		};
	}
}

function HoverContent() {
	return (
		<div
			style={ {
				margin: '20vh auto',
				maxWidth: 400,
				padding: 20,
				backgroundColor: '#fff',
				borderRadius: 4,
				boxShadow: '0 0 10px 0 rgba(0, 0, 0, 0.1)',
				textAlign: 'center',
				color: '#000',
			} }
		>
			<Text> { __( 'Autogenerated content', 'poocommerce' ) } </Text>
		</div>
	);
}

const getEmailType = ( value: string ) => {
	return window.PooCommerceEmailEditor?.email_types?.find(
		( emailType ) => emailType.value === value
	)?.id;
};

const DEFAULT_EMAIL_TYPE = 'WC_Email_Customer_Processing_Order';

export default function Edit() {
	const [ isHovered, setIsHovered ] = useState( false );
	const blockProps = useBlockProps();
	const { postSlug } = useSelect(
		( select ) => ( {
			postSlug: select( editorStore ).getCurrentPost?.()?.slug,
		} ),
		[]
	);
	const emailType = getEmailType( postSlug || '' ) || DEFAULT_EMAIL_TYPE;

	return (
		<div
			{ ...blockProps }
			onMouseEnter={ () => {
				setIsHovered( true );
			} }
			onMouseLeave={ () => {
				setIsHovered( false );
			} }
			style={ {
				position: 'relative',
			} }
		>
			<ServerSideRender
				block={ metadata.name }
				attributes={ { emailType } }
			></ServerSideRender>

			{ isHovered && (
				<div
					style={ {
						position: 'absolute',
						zIndex: 1000,
						left: 0,
						top: 0,
						width: '100%',
						height: '100%',
						background: 'rgba(0,0,0,0.5)',
						display: 'flex',
						alignItems: 'center',
						justifyContent: 'center',
						pointerEvents: 'none', // This ensures hover events pass through to ServerSideRender elements
					} }
				>
					<HoverContent />
				</div>
			) }
		</div>
	);
}
